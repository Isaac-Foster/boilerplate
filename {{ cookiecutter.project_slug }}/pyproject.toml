[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
requires-python = ">=3.12"
description = "{{ cookiecutter.project_name }}"
email = "{{ cookiecutter.email }}"
author = "{{ cookiecutter.author_name }}"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.0",
    "taskipy>=1.14.1",
]

[tool.taskipy.tasks]
format = "ruff check . --fix && ruff format ."
lint = "ruff check . && ruff . --diff"

test = "pytest --cov -vv"
post_test = "coverage html"
up = "docker compose up -d"
down = "docker compose down"

[tool.ruff]
line-length = 79
exclude = ["tests", ".venv"]


[tool.lint]
select = ["E", "F", "Q", "I"]
fix = true
unsafe-fixes = false


[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
ignore = ["SIM103", "E701", "E722", "F821"]


[tool.pytest.ini_options]
addopts = "-q --disable-warnings"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "asyncio: Mark a test as asyncio test."
]
